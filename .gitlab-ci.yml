# TODO(colemickens) open questions:
# - best way for gitlab ext re-use
# - pipeline stages vs 'needs' (consider how they appear in UI)

# TODO(colemickens) ideas:
# - use a custom image for gitlab with the installer pre-baked?? but people probably already have their own?? how do we test with those, etc?

# TODO(colemickens) headaches:
# - gitlab doesn't share the state between jobs ???? (even within pipeline TODO: investigate)

variables:
  TMPDIR: /home/gitlab-runner/cache
  NIX_INSTALLER_EXTRA_CONF: /home/gitlab-runner/cache/flakehub-extra-conf"
  FLAKEHUB_ENDPOINT: "https://fh-api.mickens.us"

set-jwt-token:
  id_tokens:
      GITLAB_JWT_ID_TOKEN:
        # TODO(colemickens): proto/url or? we don't in config.json
        # TODO(colemickens): maybe /dont/ specialize this for self-host
        aud: "api.flakehub.com"
  script:
  - mkdir -p "${TMPDIR}"
  - export NIX_INSTALLER_NETRC="${TMPDIR}/flakehub-netrc"
  - echo "machine api.${FLAKEHUB_ENDPOINT} login flakehub password ${GITHUB_JWT_ID_TOKEN}" > "${NIX_INSTALLER_EXTRA_CONF}"
  - echo "machine ${FLAKEHUB_ENDPOINT} login flakehub password ${GITHUB_JWT_ID_TOKEN}" > "${NIX_INSTALLER_EXTRA_CONF}"
  - echo "netrc-file = ${NIX_INSTALLER_NETRC}" > "${NIX_INSTALLER_EXTRA_CONF}"

# install-nix:
#   needs:
#   - set-jwt-token
#   script:
#   - export 
  - curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install linux --no-confirm --init none
  - . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
  - nix flake show "${FLAKEHUB_ENDPOINT}/f/ghuser-cole/flakesrock-private/0.3.1.tar.gz"
  - nix build -j0 "${FLAKEHUB_ENDPOINT}/f/ghuser-cole/flakesrock-private/0.3.1.tar.gz#truth"

# WIP SCRATCH:
# https://fh.mickens.us/f/ghuser-cole/flakesrock-public/0.3.1.tar.gz

# TODO:
  # - script to push something into cache
  #   - run seed-data, grab out the uuidv7, call `attic create`
  #   - (handwave)
  #   - run `attic push`

# TODO(flakehub):
# - create JWT handler
# - fetch expressions with JWT
# - pull from cache with JWT




# TODO: (config.json): compose the redirect URL in Rust from the route + web_root

# UGH SERIOUSLY flakehub-push come on, you do NOT need to talk to github